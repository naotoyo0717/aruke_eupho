// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

//npx prisma migrate dev --name init
//npx prisma migrate 


generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id             String      @id @default(uuid())
  name           String?
  email          String?     @unique
  emailVerified  DateTime?
  image          String?
  hashedPassword String?
  createdAt      DateTime    @default(now())
  updateAt       DateTime    @updatedAt
  accounts       Account[]
  userSpots      UserSpot[]  // ユーザーが訪問したスポット情報
}

model Account {
  id                  String    @id @default(uuid())
  userId              String
  type                String
  provider            String
  providerAccountId   String
  refresh_token       String?
  access_token        String?
  expires_at          Int?
  token_type          String?
  scope               String?
  id_token            String?
  session_state       String?
  user                User      @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Spot {
  id          Int         @id @default(autoincrement())
  title       String
  pictureUrl  String
  explanation String
  address     String
  nearStation Int?
  standard    Boolean     @default(false)
  userSpots   UserSpot[]  // このスポットを訪問したユーザー情報
}

model UserSpot {
  id        Int      @id @default(autoincrement())
  userId    String
  spotId    Int
  visited   Boolean  //@default(false)　多分呼び出し側とdefault(false)が衝突しててエラーが出てた。
  selected  Boolean  //@default(false)
  createdAt DateTime @default(now())

  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  spot      Spot     @relation(fields: [spotId], references: [id], onDelete: Cascade)

  @@unique([userId, spotId]) // 同じユーザーが同じスポットを複数回登録できないようにする
  @@index([userId])
  @@index([spotId])
}
